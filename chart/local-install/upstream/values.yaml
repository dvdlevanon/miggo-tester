miggo-operator: 
  # Default values for opentelemetry-operator.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1

  ## Provide a name in place of opentelemetry-operator.
  ##
  nameOverride: ""

  ## Reference one or more secrets to be used when pulling images from authenticated repositories.
  imagePullSecrets:
    - name: regcred

  imageCredentials:
    registry: https://index.docker.io/v1/
    username: "dorgs"
    password: "<masked>"

  ## Pod Disruption Budget configuration
  ##
  pdb:
    ## Enable/disable a Pod Disruption Budget creation
    ##
    create: false
    ## Minimum number/percentage of pods that should remain scheduled
    ##
    minAvailable: 1
    ## Maximum number/percentage of pods that may be made unavailable
    ##
    maxUnavailable: ""

  ## Provide OpenTelemetry Operator manager container image and resources.
  ##
  manager:
    image:
      # repository: "miggoprod/miggo-operator" 
      repository: "david-operator-test" 
      tag: "latest"
    collectorImage: 
      repository:  "miggoprod/miggo-infra-agent"
      tag: "latest"
    targetAllocatorImage:
      repository: ""
      tag: ""
    autoInstrumentationImage:
      java:
        repository: "miggoprod/autoinstrumentation-java"
        tag: "latest"
      nodejs:
        repository: "" 
        tag: ""
      python: 
        repository: "miggoprod/autoinstrumentation-python"
        tag: "latest" 
      dotnet:
        repository: ""
        tag: ""
      # The Go instrumentaiton support in the operator is disabled by default.
      # To enable it, use the operator.autoinstrumentation.go feature gate.
      go:
        repository: ""
        tag: ""
    # Feature Gates are a a comma-delimited list of feature gate identifiers.
    # Prefix a gate with '-' to disable support.
    # Prefixing a gate with '+' or no prefix will enable support.
    # A full list of valud identifiers can be found here: https://github.com/open-telemetry/opentelemetry-operator/blob/main/pkg/featuregate/featuregate.go
    featureGates: ""
    ports:
      metricsPort: 8080
      webhookPort: 9443
      healthzPort: 8081
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi
    ## Adds additional environment variables
    ## e.g ENV_VAR: env_value
    env:
      ENABLE_WEBHOOKS: "true"

    # -- Create the manager ServiceAccount
    serviceAccount:
      create: true
      annotations: {}
      # name: nameOverride

    ## Enable ServiceMonitor for Prometheus metrics scrape
    serviceMonitor:
      enabled: false
      # additional labels on the ServiceMonitor
      extraLabels: {}
      # add annotations on the ServiceMonitor
      annotations: {}
      metricsEndpoints:
      - port: metrics

    podAnnotations: {}
    podLabels: {}

    prometheusRule:
      enabled: false
      groups: []
      # Create default rules for monitoring the manager
      defaultRules:
        enabled: false
      # additional labels on the PrometheusRule
      extraLabels: {}
      # add annotations on the PrometheusRule
      annotations: {}


    ## List of additional cli arguments to configure the manager
    ## for example: --labels, etc.
    extraArgs: []

    ## Enable leader election mechanism for protecting against split brain if multiple operator pods/replicas are started.
    ## See more at https://docs.openshift.com/container-platform/4.10/operators/operator_sdk/osdk-leader-election.html
    leaderElection:
      enabled: true

    # Enable vertical pod autoscaler support for the manager
    verticalPodAutoscaler:
      enabled: false
      # List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
      controlledResources: []

      # Define the max allowed resources for the pod
      maxAllowed: {}
      # cpu: 200m
      # memory: 100Mi
      # Define the min allowed resources for the pod
      minAllowed: {}
      # cpu: 200m
      # memory: 100Mi

      updatePolicy:
        # Specifies whether recommended updates are applied when a Pod is started and whether recommended updates
        # are applied during the life of a Pod. Possible values are "Off", "Initial", "Recreate", and "Auto".
        updateMode: Auto
        # Minimal number of replicas which need to be alive for Updater to attempt pod eviction.
        # Only positive values are allowed. The default is 2.
        minReplicas: 2
    # Enable manager pod automatically rolling
    rolling: false

    ## Container specific securityContext
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    securityContext: {}
      # allowPrivilegeEscalation: false
      # capabilities:
      #   drop:
      #   - ALL

  ## Provide OpenTelemetry Operator kube-rbac-proxy container image.
  ##
  kubeRBACProxy:
    enabled: true
    image:
      repository: quay.io/brancz/kube-rbac-proxy
      tag: v0.14.2
    ports:
      proxyPort: 8443
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 5m
        memory: 64Mi

    ## List of additional cli arguments to configure the kube-rbac-proxy
    ## for example: --tls-cipher-suites, --tls-min-version, etc.
    extraArgs: []

    ## Container specific securityContext
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    securityContext: {}
      # allowPrivilegeEscalation: false
      # capabilities:
      #   drop:
      #   - ALL

  
  ## Create the provided Roles and RoleBindings
  ##
  role:
    create: true

  ## Create the provided ClusterRoles and ClusterRoleBindings
  ##
  clusterRole:
    create: true

  affinity: {}
  tolerations: []
  nodeSelector: {}
  topologySpreadConstraints: []
  hostNetwork: false

  # Allows for pod scheduler prioritisation
  priorityClassName: ""

  ## SecurityContext holds pod-level security attributes and common container settings.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  securityContext:
    runAsGroup: 65532
    runAsNonRoot: true
    runAsUser: 65532
    fsGroup: 65532

  testFramework:
    image:
      repository: busybox
      tag: latest

  collector:
    imageCredentials:
      registry: https://index.docker.io/v1/
      username: "dorgs"
      password: "<masked>"


    #operatorServiceAccount: {{ .Release.Name }} -collector

    ## aws fields for updater job.
    aws:
      accessKeyId: "<masked>"
      secretAccessKey: "<masked>"
      region: "us-east-1"
      bucketName: "miggo-infra-agent/test" 
      fileName: config.yaml


    updater:
      image: "miggoprod/updater:latest"
      cronjobSchedule: "100000" # time in min

    customerAttr: "io.miggo.tenant.id=1f6208b0-5683-4e1e-a45d-eab574c40d0f,io.miggo.project.id=f8fe49bb-b2eb-4a6e-9735-cee5ee472641"

    deployCollector: true

    collectorNameSpace: miggo-space
    collectorPort: 4318
    math:
      enabled: false
      name: "miggo"
      image:
        repository: "miggoprod/math"
        tag: latest
      configJson: 
        username: "miggo-test"
        password: "test"
      updater:
        image: "miggoprod/math-updater:latest"
        cronjobSchedule: "1" # time in min
      aws:
        fileName: "config.json"
